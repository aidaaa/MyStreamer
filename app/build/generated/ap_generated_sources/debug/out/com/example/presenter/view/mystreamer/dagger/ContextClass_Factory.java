// Generated by Dagger (https://google.github.io/dagger).
package com.example.presenter.view.mystreamer.dagger;

import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ContextClass_Factory implements Factory<ContextClass> {
  private final Provider<Context> contextProvider;

  public ContextClass_Factory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ContextClass get() {
    return provideInstance(contextProvider);
  }

  public static ContextClass provideInstance(Provider<Context> contextProvider) {
    return new ContextClass(contextProvider.get());
  }

  public static ContextClass_Factory create(Provider<Context> contextProvider) {
    return new ContextClass_Factory(contextProvider);
  }

  public static ContextClass newContextClass(Context context) {
    return new ContextClass(context);
  }
}
