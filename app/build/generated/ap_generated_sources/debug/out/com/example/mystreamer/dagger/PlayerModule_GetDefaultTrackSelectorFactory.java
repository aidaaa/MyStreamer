// Generated by Dagger (https://google.github.io/dagger).
package com.example.mystreamer.dagger;

import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class PlayerModule_GetDefaultTrackSelectorFactory
    implements Factory<DefaultTrackSelector> {
  private final PlayerModule module;

  public PlayerModule_GetDefaultTrackSelectorFactory(PlayerModule module) {
    this.module = module;
  }

  @Override
  public DefaultTrackSelector get() {
    return provideInstance(module);
  }

  public static DefaultTrackSelector provideInstance(PlayerModule module) {
    return proxyGetDefaultTrackSelector(module);
  }

  public static PlayerModule_GetDefaultTrackSelectorFactory create(PlayerModule module) {
    return new PlayerModule_GetDefaultTrackSelectorFactory(module);
  }

  public static DefaultTrackSelector proxyGetDefaultTrackSelector(PlayerModule instance) {
    return Preconditions.checkNotNull(
        instance.getDefaultTrackSelector(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
