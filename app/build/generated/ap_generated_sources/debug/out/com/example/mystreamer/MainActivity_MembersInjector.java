// Generated by Dagger (https://google.github.io/dagger).
package com.example.mystreamer;

import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
import com.google.android.exoplayer2.upstream.DataSource;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<DefaultTrackSelector> trackSelectorProvider;

  private final Provider<DataSource.Factory> daFactoryProvider;

  public MainActivity_MembersInjector(
      Provider<DefaultTrackSelector> trackSelectorProvider,
      Provider<DataSource.Factory> daFactoryProvider) {
    this.trackSelectorProvider = trackSelectorProvider;
    this.daFactoryProvider = daFactoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<DefaultTrackSelector> trackSelectorProvider,
      Provider<DataSource.Factory> daFactoryProvider) {
    return new MainActivity_MembersInjector(trackSelectorProvider, daFactoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectTrackSelector(instance, trackSelectorProvider.get());
    injectDaFactory(instance, daFactoryProvider.get());
  }

  public static void injectTrackSelector(
      MainActivity instance, DefaultTrackSelector trackSelector) {
    instance.trackSelector = trackSelector;
  }

  public static void injectDaFactory(MainActivity instance, DataSource.Factory daFactory) {
    instance.daFactory = daFactory;
  }
}
